package main

import (
	"encoding/json"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"net/http"
	"time"
)

const (
	help              = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ —Å—ç—Ä,—è –±–æ—Ç,–∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ª—é–±–æ–º –∏–∑–≤–µ—Å—Ç–Ω–æ–º –¥–ª—è –≤–∞—Å –≥–æ—Ä–æ–¥–µ. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞üëÄ"
	openWeatherMapAPI = "e71cc7509ba7040322d574ebdad1b5c3"
)

func GetWeather(city string, openWeatherMapAPI string) string {
	url := "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + openWeatherMapAPI + "&units=metric"
	res, err := http.Get(url) //–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ url,res-–æ—Ç–≤–µ—Ç —Å–µ—Ä–≤.
	if err != nil {
		fmt.Println(err)
		fmt.Println("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
		return ""

	}
	defer res.Body.Close() //res.body-–æ—Ç–≤–µ—Ç —Å–µ—Ä–≤,–∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ –≤ –∫–æ–Ω—Ü–µ,–∏–∑–±–µ–≥–∞—è —É—Ç–µ—á–∫—É –¥–∞–Ω–Ω—ã—Ö

	data := make(map[string]interface{})          //–¥–∞–Ω–Ω—ã–µ –∏–∑ json –æ–±—ä–µ–∫—Ç–∞
	err = json.NewDecoder(res.Body).Decode(&data) //–¥–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ res.body –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ö –≤ data
	if err != nil {
		fmt.Println(err)
	}

	fmt.Printf("%+v\n", data) //—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ data –≤ –∫–æ–Ω—Å–æ–ª—å

	city = data["name"].(string)
	weather := data["main"].(map[string]interface{})
	curWeather := weather["temp"].(float64)
	weatherDescription := data["weather"].([]interface{})[0].(map[string]interface{})["main"].(string)
	wd := ""                                                           //—Å–º–∞–π–ª–∏–∫
	if weatherDescription, ok := codeToSmile[weatherDescription]; ok { //–µ—Å–ª–∏ ok tr,—Ç–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º
		wd = weatherDescription
	} else {
		wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"
	}

	humidity := weather["humidity"].(float64)
	pressure := weather["pressure"].(float64)
	wind := data["wind"].(map[string]interface{})["speed"].(float64)

	sunriseTimestamp := time.Unix(int64(data["sys"].(map[string]interface{})["sunrise"].(float64)), 0)
	sunsetTimestamp := time.Unix(int64(data["sys"].(map[string]interface{})["sunset"].(float64)), 0)
	lengthOfDay := sunsetTimestamp.Sub(sunriseTimestamp)

	weatherData := fmt.Sprintf("***%s***\n–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: %süåå\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.2fC¬∞üå° %s\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: %.0f%%üí¶\n–î–∞–≤–ª–µ–Ω–∏–µ: %.0f –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: %.2f –º/—Åüí®Ô∏è\n–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: %s‚òÄÔ∏è\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: %süåá\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: %süåç\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!üëã",
		time.Now().Format("2006-01-02 15:04"),
		city,
		curWeather, //—Ç–µ–º–ø–∞
		wd,         //—Ç–∏–ø –ø–æ–≥–æ–¥—ã
		humidity,   //–≤–ª–∞–∂–Ω–æ—Å—Ç—å
		pressure,   //–¥–∞–≤–ª–µ–Ω–∏–µ
		wind,       //–≤–µ—Ç–µ—Ä
		sunriseTimestamp.Format("2006-01-02 15:04:05"), //–≤–æ—Å—Ö–æ–¥ —Å
		sunsetTimestamp.Format("2006-01-02 15:04:05"),  //–∑–∞–∫–∞—Ç —Å
		lengthOfDay.String(),
	)

	return weatherData
}

var codeToSmile = map[string]string{
	"Clear":        "–Ø—Å–Ω–æ ‚òÄÔ∏è",
	"Clouds":       "–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
	"Drizzle":      "–ú–æ—Ä–æ—Å—å üåß",
	"Rain":         "–î–æ–∂–¥—å üåß",
	"Thunderstorm": "–ì—Ä–æ–∑–∞ ‚õà",
	"Snow":         "–°–Ω–µ–≥ ‚ùÑÔ∏è",
	"Mist":         "–¢—É–º–∞–Ω üå´",
}

func main() {

	bot, err := tgbotapi.NewBotAPI("6537307160:AAEizhtTdKGu1ez5Jeb_uWjvfZg43GxTDaI")
	if err != nil {
		log.Panic(err)
	}

	//bot.Debug = true

	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)

	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message.Text == "/start" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, help)
			bot.Send(msg)

		} else if update.Message.Text == "/help" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É!")
			bot.Send(msg)
		} else {
			city := update.Message.Text
			go GetWeather(city, openWeatherMapAPI)
			weatherData := GetWeather(city, openWeatherMapAPI)

			if len(weatherData) == 0 {
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
				bot.Send(msg)
			} else {
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, weatherData)
				bot.Send(msg)
			}

		}
	}
}
